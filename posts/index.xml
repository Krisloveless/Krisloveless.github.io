<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on lov31ess.py</title>
    <link>https://krisloveless.github.io/posts/</link>
    <description>Recent content in Posts on lov31ess.py</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 lov31ess. All Rights Reserved</copyright>
    <lastBuildDate>Tue, 30 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://krisloveless.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; note(2)</title>
      <link>https://krisloveless.github.io/2019/07/c---note2/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krisloveless.github.io/2019/07/c---note2/</guid>
      <description>User-defined function Functions that you write yourself are called user-defined functions.
Local variables &amp;amp; lifetime Function parameters, as well as variables defined inside the function body, are called local variables.
an object’s lifetime is defined to be the time between its creation and destruction.
Forward declaration int add(int, int); A forward declaration allows us to tell the compiler about the existence of an identifier before actually defining the identifier.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; note(1)</title>
      <link>https://krisloveless.github.io/2019/07/c---note1/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krisloveless.github.io/2019/07/c---note1/</guid>
      <description>The initalization int width = 5;: copy initialization
int width(5); : direct initialization
int width{}/*zero initialization*/;int width{5}/*explicit initialization*/;int width{4.5}; : uniform initialization,{} will get 0 init, 4.5 with issue an error.
std:endl Using std::endl can be a bit inefficient, as it actually does two jobs: it moves the cursor to the next line, and it “flushes” the output which &amp;lsquo;\n&amp;rsquo; won&amp;rsquo;t Prefer ‘\n’ over std::endl when outputting text to the console.</description>
    </item>
    
    <item>
      <title>Cheatsheets</title>
      <link>https://krisloveless.github.io/2019/07/cheatsheets/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krisloveless.github.io/2019/07/cheatsheets/</guid>
      <description> These are some useful R materials for beginners. Keep updating. Originated from Rstudio.com.
Base R </description>
    </item>
    
  </channel>
</rss>